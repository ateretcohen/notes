{"version":3,"sources":["components/AddNewNote.jsx","components/AllNotes.jsx","components/EditNote.jsx","components/Item.jsx","components/AllItems.jsx","components/Logo.jsx","App.js","serviceWorker.js","index.js"],"names":["AddNewNote","props","addItem","onFlag","state","name","to","className","onClick","addNoteToList","src","type","placeholder","onChange","e","setState","target","value","Component","AllNotes","this","id","date","saveI","index","deleteFromNotes","EditNote","updateNote","style","marginTop","Item","radioChenge","radio","text","itemText","width","marginLeft","AllItems","updateCheckBox","checkBox","defaultChecked","textItem","Logo","App","noteList","noteIndex","flag","length","alert","getDate","editDate","items","d","Date","getMonth","getFullYear","newList","filter","i","saveIndex","note","showItems","map","itemN","push","noteHelp","check","marginBottom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mSAGqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAMVC,QAAQ,WACL,EAAKD,MAAME,UALV,EAAKC,MAAQ,CACRC,KAAK,IAJK,E,sEAUT,IAAD,OACL,OACI,6BACG,kBAAC,IAAD,CAAMC,GAAG,KAAI,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAMQ,cAAc,EAAKL,MAAMC,MAAK,KAAS,yBAAKE,UAAU,aAAaG,IAAI,2GAA0G,0CACzP,kBAAC,IAAD,CAAMJ,GAAG,aAAY,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAMQ,cAAc,EAAKL,MAAMC,MAAK,KAAQ,yBAAKE,UAAU,aAAaG,IAAI,kFAAiF,0CACvO,kBAAC,IAAD,CAAMJ,GAAG,KAAI,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAMQ,cAAc,EAAKL,MAAMC,MAAK,KAAS,qCAC/G,6BACA,2BAAOM,KAAK,OAAOJ,UAAU,QAAQK,YAAY,YAAYC,SAAU,SAACC,GAAK,EAAKC,SAAS,CAACV,KAAKS,EAAEE,OAAOC,gB,GAlBjFC,aCCnBC,E,YACjB,WAAYlB,GAAQ,IAAD,8BACf,4CAAMA,KAEDG,MAAQ,GAHE,E,sEAQT,IAAD,OACL,OACG,yBAAKG,UAAU,QACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,SACd,2BAAIa,KAAKnB,MAAMI,MAAS,6BACxB,0BAAMgB,GAAG,cAAcD,KAAKnB,MAAMqB,OAElC,yBAAKf,UAAU,SACf,kBAAC,IAAD,CAAMD,GAAG,aAAY,4BAAQC,UAAU,iBAAiBC,QAAS,WAAK,EAAKP,MAAMsB,MAAM,EAAKtB,MAAMuB,SAAS,yBAAKjB,UAAU,cAAcG,IAAI,qFAE5I,yBAAKH,UAAU,SACf,4BAAQA,UAAU,iBAAiBC,QAAS,WAAK,EAAKP,MAAMwB,gBAAgB,EAAKxB,MAAMuB,SAAS,yBAAKjB,UAAU,cAAcG,IAAI,4DAEjI,yBAAKH,UAAU,gB,GAvBOW,aCAjBQ,E,YACjB,WAAYzB,GAAQ,IAAD,8BACf,4CAAMA,KAEDG,MAAQ,GAHE,E,sEAQT,IAAD,OACL,OACI,6BAGA,kBAAC,IAAD,CAAME,GAAG,KAAI,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAM0B,eAAe,yBAAKpB,UAAU,aAAaG,IAAI,2GAA0G,0CACjO,kBAAC,IAAD,CAAMJ,GAAG,KAAI,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAMwB,gBAAgB,EAAKxB,MAAMuB,SAAS,yBAAKjB,UAAU,cAAcG,IAAI,0DAAyD,yCAEtM,kBAAC,IAAD,CAAMJ,GAAG,KAAI,4BAAQC,UAAU,gBAAgBC,QAAS,WAAK,EAAKP,MAAM0B,eAAe,qCACtF,6BACD,uBAAGpB,UAAU,OAAOqB,MAAO,CAACC,UAAU,SAAUT,KAAKnB,MAAMI,W,GAnBjCa,aCFjBY,E,YACjB,WAAY7B,GAAQ,IAAD,8BACf,4CAAMA,KAOV8B,YAAY,WAEa,GAAlB,EAAK3B,MAAM4B,MAEV,EAAKjB,SAAS,CAACiB,OAAM,IAIrB,EAAKjB,SAAS,CAACiB,OAAM,KAhBV,EAmBnBC,KAAK,WACJ,EAAKhC,MAAMC,QAAQ,EAAKE,MAAM4B,MAAM,EAAK5B,MAAM8B,WAjB5C,EAAK9B,MAAQ,CACR8B,SAAS,GACTF,OAAM,GALI,E,sEAsBT,IAAD,OACL,OACI,yBAAKzB,UAAU,QACX,2BAAOI,KAAK,WAAWE,SAAUO,KAAKW,cAAc,0BAAMxB,UAAU,iBACpE,2BAAOI,KAAK,OAAOJ,UAAU,QAAQqB,MAAO,CAACO,MAAM,MAAOC,WAAW,OAAQvB,SAAU,SAACC,GAAK,EAAKC,SAAS,CAACmB,SAASpB,EAAEE,OAAOC,SAAUL,YAAY,aACpJ,oCACA,4BAAQS,GAAG,UAAUb,QAASY,KAAKa,MAAM,wC,GA7BvBf,aCAbmB,E,YACjB,WAAYpC,GAAQ,IAAD,8BACf,4CAAMA,KAMV8B,YAAY,WAEa,GAAlB,EAAK3B,MAAM4B,MAGT,EAAK/B,MAAMqC,gBAAe,EAAM,EAAKrC,MAAMuB,OAK3C,EAAKvB,MAAMqC,gBAAe,EAAK,EAAKrC,MAAMuB,QAd/C,EAAKpB,MAAQ,CACR4B,MAAM,EAAK/B,MAAMsC,UAJP,E,sEAuBf,OACI,yBAAKhC,UAAU,QACX,2BAAOI,KAAK,WAAW6B,eAAgBpB,KAAKnB,MAAMsC,SAAU1B,SAAUO,KAAKW,cAC3E,0BAAMH,MAAO,CAACQ,WAAW,QAAShB,KAAKnB,MAAMwC,e,GA3BvBvB,a,MCAvB,SAASwB,IACpB,OACI,yBAAKrB,GAAG,QACJ,qC,ICOSsB,E,2MACnBvC,MAAM,CACJwC,SAAS,GACTC,UAAU,GACVrB,MAAM,EACNsB,MAAK,G,EAEPrC,cAAc,SAACJ,EAAKyC,GAClB,GAAgC,KAA7B,EAAK1C,MAAMwC,SAASG,OAErBC,MAAM,kCAGR,CACE,IAAI1B,EAAK,EAAK2B,UAEf,EAAKlC,SAAS,CAAC6B,SAAS,CAAC,CAACvC,KAAKA,EAAOiB,KAAKA,EAAM4B,SAAS,GAAGC,MAAM,KAA5C,mBAAmD,EAAK/C,MAAMwC,aACrF,EAAK7B,SAAS,CAAC8B,UAAU,CAACxC,KAAKA,EAAOiB,KAAKA,EAAM4B,SAAS,GAAGC,MAAM,OACzD,IAAPL,IAED,EAAK/B,SAAS,CAACS,MAAM,IACrB,EAAKT,SAAS,CAAC+B,MAAK,O,EAIzBG,QAAQ,WAEN,IAAIG,EAAE,IAAIC,KAEV,OADcD,EAAEH,UAAU,KAAKG,EAAEE,WAAW,GAAG,IAAIF,EAAEG,e,EAGvD9B,gBAAgB,SAACD,GAEf,IAAIgC,EAAQ,EAAKpD,MAAMwC,SAASa,QAAO,SAAC3C,EAAE4C,GAAH,OAAQlC,GAAOkC,KACtD,EAAK3C,SAAS,CAAC6B,SAAS,YAAIY,M,EAE9BG,UAAU,SAACnC,GAET,IAAMoC,EAAK,EAAKxD,MAAMwC,SAASpB,GAC/B,EAAKT,SAAS,CAAC8B,UAAUe,IACzB,EAAK7C,SAAS,CAACS,MAAMA,IACrB,EAAKT,SAAS,CAAC+B,MAAK,K,EAEtBnB,WAAW,WAET,IAAI6B,EAAQ,EAAKpD,MAAMwC,SAASa,QAAO,SAAC3C,EAAEU,GAAH,OAAYA,IAAS,EAAKpB,MAAMoB,SACvE,EAAKT,SAAS,CAAC6B,SAAS,YAAIY,KAGf,EAAKpD,MAAMyC,UACfK,SAAS,EAAKD,UAGvB,EAAKlC,SAAS,CAAC6B,SAAS,EAAKxC,MAAMwC,Y,EAIrCzC,OAAO,WAEL,EAAKY,SAAS,CAAC+B,MAAK,K,EAEtBe,UAAU,WACR,IAAqB,IAAlB,EAAKzD,MAAM0C,KAIZ,OAAO,6BAEH,EAAK1C,MAAMyC,UAAUM,MAAMW,KAAI,SAAChD,EAAE4C,GAChC,OAAO,kBAAC,EAAD,CAAUlC,MAAOkC,EAAGnB,SAAUzB,EAAEkB,MAAOS,SAAU3B,EAAE2B,SAAUH,eAAgB,EAAKA,oBAG7F,kBAAC,EAAD,CAAMpC,QAAS,EAAKA,Y,EAI1BA,QAAQ,SAAC8B,EAAMC,GAEb,IAAM8B,EAAM,CAAC/B,MAAMA,EAAOS,SAASR,GACnC,EAAKlB,UAAS,SAAAX,GACF,EAAKA,MAAMwC,SACjB,EAAKxC,MAAMoB,OAAO2B,MAAMa,KAAKD,MAGnC,IAAME,EAAS,EAAK7D,MAAMwC,SAAS,EAAKxC,MAAMoB,OAC9C,EAAKT,SAAS,CAAC8B,UAAUoB,K,EAG3B3B,eAAe,SAAC4B,EAAM1C,GAEjB,IAAIgC,EAAQ,EAAKpD,MAAMwC,SAASa,QAAO,SAAC3C,EAAEU,GAAH,OAAYA,IAAS,EAAKpB,MAAMoB,SACvE,EAAKT,SAAS,CAAC6B,SAAS,YAAIY,KAGX,EAAKpD,MAAMyC,UAAUM,MAAM3B,GAC/BQ,MAAMkC,EAGnB,EAAKnD,SAAS,CAAC6B,SAAS,EAAKxC,MAAMwC,Y,wEAE9B,IAAD,OACP,OACE,yBAAKrC,UAAU,aACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMD,GAAG,eAAc,4BAAQe,GAAG,mBAAmBO,MAAO,CAACuC,aAAa,OAAO,yBAAK9C,GAAG,aAAaX,IAAI,oFAC1G,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,UAAW,WAC/B,OAAQ,6BACN,kBAAC5B,EAAD,MAEE,EAAKtC,MAAMwC,SAASkB,KAAI,SAAChD,EAAE4C,GACzB,OAAO,kBAAC,EAAD,CAAUrD,KAAMS,EAAET,KAAMmB,MAAOkC,EAAGpC,KAAMR,EAAEQ,KAAMG,gBAAiB,EAAKA,gBAAiBF,MAAO,EAAKoC,mBAKlH,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,cAAcC,UAAW,WACzC,OAAO,kBAAC,EAAD,CAAY7D,cAAe,EAAKA,mBAExC,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,YAAYC,UAAW,WACxC,OAAO,6BACL,kBAAC,EAAD,CAAUjE,KAAM,EAAKD,MAAMyC,UAAUxC,KAAMsB,WAAY,EAAKA,WAAYH,MAAO,EAAKpB,MAAMoB,MAAOC,gBAAiB,EAAKA,kBACtH,EAAKoC,uB,GA3Ha3C,aCAbqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9aaa6b06.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class AddNewNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:''\r\n        }\r\n    }\r\n    addItem=()=>{\r\n       this.props.onFlag() \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Link to=\"/\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.addNoteToList(this.state.name,false)}}><img className=\"ImgNaveBar\" src=\"https://www.inventicons.com//uploads/iconset/1168/wm/512/Arrow-back-left-arrow-previous-iconsvg-66.png\"/><b>all notes</b></button></Link>      \r\n               <Link to=\"/EditNote\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.addNoteToList(this.state.name,true)}}><img className=\"ImgNaveBar\" src=\"https://cdn0.iconfinder.com/data/icons/harmonicons-02/64/check-circle-512.png\"/><b> add item</b></button></Link> \r\n               <Link to=\"/\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.addNoteToList(this.state.name,false)}}><b>done</b></button></Link> \r\n               <br/>\r\n               <input type=\"text\" className=\"input\" placeholder=\"note name\" onChange={(e)=>{this.setState({name:e.target.value})}}/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class AllNotes extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n           <div className=\"card\">\r\n               <div className=\"row\">\r\n               <div className=\"col-8\">\r\n                <b>{this.props.name}</b><br/>\r\n                <span id=\"createDate\">{this.props.date}</span>\r\n               </div>\r\n                <div className=\"col-1\">\r\n                <Link to=\"/EditNote\"><button className=\"allNoteButtons\" onClick={()=>{this.props.saveI(this.props.index)}}><img className=\"allNotesImg\" src=\"https://cdn2.iconfinder.com/data/icons/business-and-internet/512/Note-512.png\"/></button></Link> \r\n                </div>\r\n                <div className=\"col-1\">\r\n                <button className=\"allNoteButtons\" onClick={()=>{this.props.deleteFromNotes(this.props.index)}}><img className=\"allNotesImg\" src=\"https://image.flaticon.com/icons/png/512/61/61848.png\"/></button>\r\n                </div>\r\n                <div className=\"col-2\"></div>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class EditNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n           \r\n          \r\n            <Link to=\"/\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.updateNote()}}><img className=\"ImgNaveBar\" src=\"https://www.inventicons.com//uploads/iconset/1168/wm/512/Arrow-back-left-arrow-previous-iconsvg-66.png\"/><b>all notes</b></button></Link>  \r\n            <Link to=\"/\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.deleteFromNotes(this.props.index)}}><img className=\"allNotesImg\" src=\"https://image.flaticon.com/icons/png/512/66/66847.png\"/><b>  delete</b></button></Link>  \r\n           \r\n            <Link to=\"/\"><button className=\"buttonNaveBar\" onClick={()=>{this.props.updateNote()}}><b>done</b></button></Link>  \r\n             <br/>\r\n            <b className=\"edit\" style={{marginTop:'10px'}}>{this.props.name}</b>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Item extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             itemText:'',\r\n             radio:false\r\n        }\r\n    }\r\n    radioChenge=()=>{\r\n        //turn off/on radio button\r\n        if(this.state.radio==true)\r\n        {\r\n            this.setState({radio:false})\r\n        }\r\n        else\r\n        {\r\n            this.setState({radio:true})\r\n        }\r\n    }\r\n    text=()=>{\r\n     this.props.addItem(this.state.radio,this.state.itemText)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"edit\">\r\n                <input type=\"checkbox\" onChange={this.radioChenge}/><span className=\"checkboxSpan\"></span>\r\n                <input type=\"text\" className=\"input\" style={{width:'30%', marginLeft:'5px'}} onChange={(e)=>{this.setState({itemText:e.target.value})}} placeholder=\"add item\"/>\r\n                <span>  </span>\r\n                <button id=\"addItem\" onClick={this.text}><b>add</b></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AllItems extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             radio:this.props.checkBox\r\n        }\r\n    }\r\n    radioChenge=()=>{\r\n        //turn off/on radio button\r\n        if(this.state.radio==true)\r\n        {\r\n             //chenge\r\n             this.props.updateCheckBox(false,this.props.index)\r\n        }\r\n        else\r\n        {\r\n             //chenge\r\n             this.props.updateCheckBox(true,this.props.index)\r\n        }\r\n        \r\n       \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"edit\">\r\n                <input type=\"checkbox\" defaultChecked={this.props.checkBox} onChange={this.radioChenge}/>\r\n                <span style={{marginLeft:'5px'}}>{this.props.textItem}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div id=\"logo\">\r\n            <b>notes</b>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport {HashRouter as Router,Switch,Route, Link} from 'react-router-dom'\nimport AddNewNote from './components/AddNewNote';\nimport AllNotes from './components/AllNotes';\nimport EditNote from './components/EditNote';\nimport Item from './components/Item';\nimport AllItems from './components/AllItems';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Logo from './components/Logo';\n\n\nexport default class App extends Component {\n  state={\n    noteList:[],\n    noteIndex:{},\n    index:0,\n    flag:false\n  }\n  addNoteToList=(name,flag)=>{\n    if(this.state.noteList.length===10)\n    {\n      alert('u can add just ten notes!!');\n    }\n    else\n    {\n      var date=this.getDate();\n      //create new note\n     this.setState({noteList:[{name:name , date:date, editDate:'',items:[]},...this.state.noteList]})\n     this.setState({noteIndex:{name:name , date:date, editDate:'',items:[]}})\n     if(flag===true)\n     {\n       this.setState({index:0})\n       this.setState({flag:true})\n     }\n    }\n  }\n  getDate=()=>{\n    //function return my full date d/m/y\n    var d=new Date();\n    var fullDate= d.getDate()+'/'+(d.getMonth()+1)+'/'+d.getFullYear();\n    return fullDate;\n  }\n  deleteFromNotes=(index)=>{\n    //delete note from noteList\n    var newList=this.state.noteList.filter((e,i)=>(index!=i));\n    this.setState({noteList:[...newList]})\n  }\n  saveIndex=(index)=>{\n    //save index and noteList[index] to edit note.\n    const note=this.state.noteList[index];\n    this.setState({noteIndex:note})\n    this.setState({index:index})\n    this.setState({flag:true})\n  }\n  updateNote=()=>{\n    //delete my note in this.state.index from list\n    var newList=this.state.noteList.filter((e,index)=>(index!==(this.state.index)));\n    this.setState({noteList:[...newList]})\n\n    //update date edit\n    var editNote=this.state.noteIndex;\n    editNote.editDate=this.getDate();\n\n    //update list notes\n    this.setState({noteList:this.state.noteList})\n  }\n  \n  //to add new item\n  onFlag=()=>{\n    //onclike to add item show the componnent item\n    this.setState({flag:true})\n  }\n  showItems=()=>{\n    if(this.state.flag===true)\n    {\n      //if u in edit show componnent items of note\n      //and componnent add item\n      return(<div>\n        {\n          this.state.noteIndex.items.map((e,i)=>{\n            return <AllItems index={i} checkBox={e.radio} textItem={e.textItem} updateCheckBox={this.updateCheckBox}/>\n          })\n        }\n        <Item addItem={this.addItem}/>\n      </div>)\n    }\n  }\n  addItem=(radio,text)=>{\n    //add item to noteList[index].items\n    const itemN={radio:radio, textItem:text}\n    this.setState(state=>{\n    const notes=this.state.noteList;\n    notes[this.state.index].items.push(itemN)\n    })\n    //update state noteIndex\n    const noteHelp=this.state.noteList[this.state.index];\n    this.setState({noteIndex:noteHelp})\n  }\n\n  updateCheckBox=(check,index)=>{\n       //delete my note in this.state.index from list\n       var newList=this.state.noteList.filter((e,index)=>(index!==(this.state.index)));\n       this.setState({noteList:[...newList]})\n   \n       //update date edit\n       var editNoteItem=this.state.noteIndex.items[index];\n       editNoteItem.radio=check;\n   \n       //update list notes\n       this.setState({noteList:this.state.noteList})\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Router>\n          \n          <Link to=\"/AddNewNote\"><button id=\"addNewNoteButton\" style={{marginBottom:'4%'}}><img id=\"addNewNote\" src=\"https://cdn2.iconfinder.com/data/icons/business-and-internet/512/Note-512.png\"/></button></Link>\n          <Switch>\n          <Route exact path='/' component={()=>{\n            return (<div>\n              <Logo/>\n              {\n                this.state.noteList.map((e,i)=>{\n                  return <AllNotes name={e.name} index={i} date={e.date} deleteFromNotes={this.deleteFromNotes} saveI={this.saveIndex}/>\n                })\n              }\n            </div>)\n           }}/>\n          <Route exact path='/AddNewNote' component={()=>{\n            return <AddNewNote addNoteToList={this.addNoteToList}/>\n           }}/>\n           <Route exact path='/EditNote' component={()=>{\n            return(<div>\n              <EditNote name={this.state.noteIndex.name} updateNote={this.updateNote} index={this.state.index} deleteFromNotes={this.deleteFromNotes}/>\n              {this.showItems()}\n            </div>) \n           }}/>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\n      // <header className=\"App-header\">\n\n      // </header>\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}